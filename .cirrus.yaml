unix_bundle_cache: &unix_bundle_cache
  bundle_cache:
    folder: vendor/bundle
    fingerprint_script:
      - echo $CIRRUS_OS
      - ruby -v
      - cat Gemfile
      - cat *.gemspec
  bundle_install_script:
    - bundle config set --local path 'vendor/bundle'
    - bundle update

unix_codecov: &unix_codecov
  codecov_uploader_cache:
    folder: codecov
    fingerprint_script:
      - curl -Os https://uploader.codecov.io/latest/${CODECOV_OS}/codecov.SHA256SUM
    populate_script:
      - mkdir -p codecov
      - curl -s https://uploader.codecov.io/latest/${CODECOV_OS}/codecov -o codecov/uploader
      - chmod +x codecov/uploader

  codecov_script: codecov/uploader

env:
  ## To suppress flood of warnings:
  ## https://github.com/cirruslabs/cirrus-ci-docs/issues/814
  ## https://github.com/rubygems/rubygems/issues/4466#issuecomment-818688569
  ## Global for:
  ## 1. different tasks (rubocop, test, etc.);
  ## 2. avoiding overriding `env` in specific cases like macOS.
  TMPDIR: $CIRRUS_WORKING_DIR

remark_task:
  container:
    image: node
  node_modules_cache:
    folder: node_modules
    fingerprint_script:
      - echo $CIRRUS_OS
      - node -v
      - cat package.json
  install_script: npm install
  lint_script: npm run remark
  only_if: ($CIRRUS_BRANCH == 'main') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'package.json', '.remarkrc.yaml', '**.md'
    )

bundle-audit_task:
  container:
    image: ruby:latest
  install_script:
    - gem update --system --no-document
  <<: *unix_bundle_cache
  audit_script: bundle exec bundle-audit check --update
  only_if: ($CIRRUS_BRANCH == 'main') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', '*.gemspec'
    )

rubocop_task:
  container:
    image: ruby:latest
  install_script:
    - gem update --system --no-document
  <<: *unix_bundle_cache
  lint_script: bundle exec rubocop
  only_if: ($CIRRUS_BRANCH == 'main') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', 'Rakefile', '.rubocop.yml', '*.gemspec', '**.rb',
      'bin/**'
    )

test_task:
  name: Test on $CIRRUS_OS

  matrix:
    - container:
        matrix:
          image: ruby:2.6
          image: ruby:2.7
          image: ruby:3.0
          image: ruby:3.1
          image: jruby:latest

      env:
        CODECOV_OS: linux

      os_prepare_script:
        - gem update --system --no-document
        - gem install bundler --no-document

      <<: *unix_bundle_cache

      test_script: bundle exec rspec

      <<: *unix_codecov

    - container:
        image: ghcr.io/graalvm/truffleruby:latest

      env:
        CODECOV_OS: linux

      os_prepare_script:
        ## For `gem install`: https://github.com/graalvm/container/issues/9
        - dnf install -y glibc-langpack-en

        - gem update --system --no-document
        - gem install bundler --no-document

      <<: *unix_bundle_cache

      test_script: bundle exec rspec

      <<: *unix_codecov

    - macos_instance:
        image: monterey-base

      env:
        RUBY_PATH: "/usr/local/opt/ruby"
        PATH: "$RUBY_PATH/bin:$PATH"
        CODECOV_OS: macos

      ruby_cache:
        folder: $RUBY_PATH
        fingerprint_script:
          - echo $CIRRUS_OS
          - brew info ruby
        populate_script:
          ## Brew is pre-installed, as described in the CI docs:
          ## https://cirrus-ci.org/guide/macOS/#list-of-available-images
          # - bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          - brew install ruby

          - gem update --system --no-document
          - gem install bundler --no-document

      <<: *unix_bundle_cache

      test_script: bundle exec rspec

      <<: *unix_codecov

    - windows_container:
        image: cirrusci/windowsservercore:2019

      env:
        ## It's better to pre-define here instead of `refreshenv`:
        ## https://cirrus-ci.org/guide/windows/#environment-variables
        RUBY_PATH: C:\tools\ruby
        MSYS2_PATH: C:\tools\msys2
        PATH: $MSYS2_PATH;$RUBY_PATH\bin;$PATH
        CIRRUS_SHELL: powershell

      ruby_cache:
        folder: C:\tools
        fingerprint_script:
          - echo $Env:CIRRUS_OS
          ## `--limit-output` to try rid off extra information and avoid cache miss:
          ## https://cirrus-ci.com/task/5913496480120832?logs=ruby#L11-L13
          - choco search --exact "ruby" --limit-output
        populate_script:
          ## Cirrus CI has Chocolatey pre-installed 😍:
          ## https://cirrus-ci.org/guide/windows/#chocolatey

          ## https://community.chocolatey.org/packages/ruby#notes
          - choco install msys2 -y --no-progress --params "/NoPath /InstallDir:$Env:MSYS2_PATH"

          ## Install the latest Ruby with Chocolatey: https://community.chocolatey.org/packages/ruby
          ## But I don't know what to do with cache and new versions (`upgrade`?)
          - choco install ruby -y --no-progress --params "/NoPath /InstallDir:$Env:RUBY_PATH"

          ## ```
          ## Installing json 2.6.2 with native extensions
          ## MSYS2 could not be found. Please run 'ridk install'
          ## or download and install MSYS2 manually from https://msys2.github.io/
          ## ```
          - ridk install 3

          - gem update --system --no-document
          - gem install bundler --no-document

      bundle_cache:
        folder: vendor\bundle
        fingerprint_script:
          - echo $Env:CIRRUS_OS
          - ruby -v
          - type Gemfile
          - type *.gemspec

      bundle_install_script:
        - bundle config set --local path 'vendor/bundle'
        - bundle update

      test_script: bundle exec rspec

      codecov_uploader_cache:
        folder: codecov
        fingerprint_script:
          - Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe.SHA256SUM
        populate_script:
          - mkdir -p codecov
          - Invoke-WebRequest -Uri https://uploader.codecov.io/latest/windows/codecov.exe -Outfile codecov/uploader.exe

      codecov_script: .\codecov\uploader.exe

  only_if: ($CIRRUS_BRANCH == 'main') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', 'Rakefile', '.rspec', '*.gemspec', 'lib/**', 'bin/**',
      'spec/**'
    )
